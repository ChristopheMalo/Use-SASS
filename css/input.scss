$versionFile: 0.1.0;
/**
* Exemples on how to use SASS
* 
* @author: Christophe Malo
* @version: #{$versionFile}
*/
// This file shows how to use Sass
// The syntax is SCSS - not SASS
// import
@import 'reset';

// Variables (Comment just for Scss file)
$global-font: Helvetica, sans-serif;

$darkColor: #000;
$firstColor: #CCC;
$messageColor: #304C29;
$pColor: #83021F;
$titleColor: #454545;

$distance: 30px;
$mediumBorder: 4px;
$thinBorder: 1px;

// Mixins
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
       -moz-border-radius: $radius;
        -ms-border-radius: $radius;
            border-radius: $radius;
}

@mixin square-box($size) {
    height: $size;
    width: $size;
}

/* Use variable */
body {
    background: $firstColor;
    font: 100% $global-font;
    margin: $distance;
}
h1 {
    color: $titleColor;
}
p {
    color: $pColor;
}

.clear { clear: both; }

/* Nesting */
nav {
    ul {
        /*margin: 0;
        padding: 0;*/
        list-style: none;
    }
    li {
        display: inline-block;
    }
    a {
        display: block;
        padding: 6px 12px;
        text-decoration: none;
    }
}

#main {
    // Declare global variable
    $borderOne: $thinBorder solid $darkColor !global;
    border: $borderOne;
    width: 90%;
    
    div {
        p {
            font-size: 2em;
            a {
                font-weight: bold;
            }
        }
    }
    
    pre { font-size: 3em; }
}

/* Referencing Parent Selectors: & */
#parent {
    // use $borderOne global
    border: $borderOne;
    color: $darkColor;
    a {
        font-weight: bold;
        &:hover { color: $pColor; }
    }
}

/* Nested properties with namespace */
.testNamespace {
    font: {
        family: Arial;
        size: 3em;
        weight: bold;
    }
}

/* use mixins */
.displayBox {
    border: $mediumBorder solid $darkColor;
    @include border-radius(10px);
    @include square-box(100px); 
}

/* Extend / Inheritance */
.message {
    border: $mediumBorder solid $darkColor;
    margin: 10px;
    padding: 10px;
    
    p {
        color: $messageColor;
    }
}

.success {
    @extend .message;
    border-color: #299A0B;
}

.error {
    @extend .message;
    border-color: #C9224E;
}

.warning {
    @extend .message;
    border-color: #D1C300;
}

/* Grid with operator */
.container {
    border: $borderOne;
    width: 100%
}

article[role="main"] {
    border: $borderOne;
    float: left;
    width: 600px / 960px * 100%;
}

aside[role="complementary"] {
    border: $borderOne;
    float: right;
    width: 300px / 960px * 100%;
}